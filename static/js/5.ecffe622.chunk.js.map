{"version":3,"sources":["App/Components/TagChip.tsx","App/Components/TabPanel.tsx","App/Components/RecipeLargeScreen.tsx","App/Components/RecipeSmallScreen.tsx","App/Components/Recipe.tsx","App/Pages/RecipePage.tsx"],"names":["TagChip","props","state","variant","initialValue","selected","this","size","label","component","Link","to","link","clickable","className","color","onClick","toggleChip","setState","onDeselect","onSelect","React","Component","TabPanel","role","style","display","index","value","flexDirection","id","aria-labelledby","children","RecipeLargeScreen","classes","theme","currentTab","event","newValue","newIndex","invalid","Card","recipeCard","CardContent","content","overview","Typography","title","tags","map","tag","i","key","recipeInfo","resultImg","src","alt","summary","tabNavContainer","tabNavCard","tabRoot","AppBar","position","tabCardHeader","Tabs","onChange","handleTabChange","bind","indicatorColor","textColor","aria-label","Tab","a11yProps","tabContent","swipeableZone","axis","direction","onChangeIndex","handleTabChangeIndex","enableMouseEvents","dir","ingredients","ingredient","list","steps","step","withStyles","createStyles","margin","flex","minHeight","padding","paddingBottom","spacing","minWidth","marginLeft","backgroundColor","lighten","palette","background","paper","width","default","marginRight","marginTop","height","overflow","maxWidth","maxHeight","marginBottom","boxShadow","shadows","borderRadius","withTheme","RecipeSmallScreen","flexGrow","Recipe","recipeRoot","largeRecipe","smallRecipe","breakpoints","down","up","RecipePage","recipe","invalidRecipe","location","pathname","substring","http","get","process","resp","pipeline","pipe","StreamArray","withParser","found","on","data","result","end","withRouter"],"mappings":"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","file":"static/js/5.ecffe622.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { Link } from 'react-router-dom';\r\nimport { RecipeTag } from '../Types/RecipeTag';\r\n\r\ninterface CommonProps {\r\n    label: RecipeTag;\r\n    className?: string;\r\n}\r\ninterface TagPropsLink extends CommonProps {\r\n    variant: \"link\";\r\n    link: string;\r\n}\r\ninterface TagPropsSelector extends CommonProps {\r\n    variant: \"selector\";\r\n    onSelect: (label: RecipeTag) => void;\r\n    onDeselect: (label: RecipeTag) => void;\r\n    initialValue?: boolean;\r\n}\r\ntype TagChipProps = TagPropsLink | TagPropsSelector;\r\n\r\ninterface TagChipState {\r\n    selected?: boolean;\r\n}\r\n\r\n\r\nexport default class TagChip extends React.Component<TagChipProps, TagChipState>{\r\n    constructor(props: TagChipProps) {\r\n        super(props);\r\n        this.state = this.props.variant === \"selector\" && this.props.initialValue ? { selected: true } : {};\r\n    }\r\n    render() {\r\n        if (this.props.variant === \"link\") {\r\n            return (\r\n                <Chip size=\"small\" label={this.props.label} component={Link} to={this.props.link as string} clickable className={this.props.className} />\r\n            );\r\n        } else if (this.props.variant === \"selector\") {\r\n            if (this.state.selected) {\r\n                return (\r\n                    <Chip size=\"small\" color=\"secondary\" label={this.props.label} clickable className={this.props.className} onClick={() => this.toggleChip()}></Chip>\r\n                );\r\n            } else {\r\n                return (\r\n                    <Chip size=\"small\" variant=\"outlined\" label={this.props.label} clickable className={this.props.className} onClick={() => this.toggleChip()}></Chip>\r\n                );\r\n            }\r\n        }\r\n    }\r\n    toggleChip() {\r\n        if (this.props.variant !== \"selector\") return;\r\n\r\n        if (this.state.selected) {\r\n            this.setState({ selected: false });\r\n            this.props.onDeselect(this.props.label);\r\n        } else {\r\n            this.setState({ selected: true });\r\n            this.props.onSelect(this.props.label);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\ninterface TabPanelProps {\r\n    dir?: string;\r\n    value: number;\r\n    index: number;\r\n}\r\n\r\nexport default class TabPanel extends React.Component<TabPanelProps> {\r\n    render() {\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                style={{\r\n                    display: this.props.index === this.props.value ? \"flex\" : \"none\",\r\n                    flexDirection: 'column'\r\n                }}\r\n                id={`full-width-tabpanel-${this.props.index}`}\r\n                aria-labelledby={`full-width-tab-${this.props.index}`}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { createStyles, Theme, WithStyles, withStyles, lighten } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography, AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport TabPanel from './TabPanel';\r\nimport TagChip from './TagChip';\r\nimport { RecipeInfo } from '../Types/RecipeInfo';\r\n\r\n//#region Classes\r\nconst useStyles = (theme: Theme) => createStyles({\r\n    \"recipeCard\": {\r\n        display: \"flex\",\r\n        margin: \"2vw\",\r\n        flex: '1 1 auto',\r\n        minHeight: 0,\r\n    },\r\n    \"content\": {\r\n        display: \"flex\",\r\n        flex: '1 1 auto',\r\n        minHeight: 0,\r\n        padding: \"inherit\",\r\n        \"&:last-child\": {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    \"overview\": {\r\n        margin: theme.spacing(2.5),\r\n        flex: '40%',\r\n        minWidth: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    \"tabNavContainer\": {\r\n        margin: theme.spacing(2.5),\r\n        marginLeft: 0,\r\n        flex: '60%',\r\n        minHeight: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    \"tabNavCard\": {\r\n        flex: '1 1 auto',\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.10),\r\n        minHeight: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    \"tabRoot\": {\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.10),\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minHeight: 0,\r\n        flex: '1 1 auto',\r\n    },\r\n    \"tabCardHeader\": {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    \"tag\": {\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \"tabContent\": {\r\n        height: \"100%\",\r\n        flex: '1 1 auto',\r\n        minHeight: 0,\r\n        overflow: \"auto\"\r\n    },\r\n    \"resultImg\": {\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"auto\",\r\n        marginBottom: theme.spacing(1),\r\n        boxShadow: theme.shadows[1],\r\n        borderRadius: \"4px\",\r\n    },\r\n    \"recipeInfo\": {\r\n        marginTop: theme.spacing(2.5),\r\n        flex: \"1 1 auto\",\r\n        minHeight: 0,\r\n        overflow: \"auto\"\r\n    },\r\n    \"swipeableZone\": {\r\n        height: \"100%\",\r\n    },\r\n    \"list\":{\r\n        \"&:not(:last-child)\":{\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n});\r\n//#endregion Classes\r\n\r\n//#region Types\r\ninterface RecipeProps extends RecipeInfo<WithStyles<typeof useStyles, true>>{\r\n    invalid?: boolean;\r\n};\r\ninterface RecipeState {\r\n    currentTab: number;\r\n}\r\n//#endregion Types\r\n\r\n//#region Main\r\nclass RecipeLargeScreen extends React.Component<RecipeProps, RecipeState>{\r\n    private classes: Record<keyof ReturnType<typeof useStyles>, string>;\r\n    private theme: Theme;\r\n    constructor(props: RecipeProps) {\r\n        super(props);\r\n        this.classes = this.props.classes;\r\n        this.theme = this.props.theme;\r\n        this.state = { currentTab: 0 };\r\n    }\r\n    a11yProps(index: number) {\r\n        return {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n    }\r\n    handleTabChange(event: React.ChangeEvent<{}>, newValue: number) {\r\n        this.setState({ ...this.state, currentTab: newValue });\r\n    }\r\n    handleTabChangeIndex(newIndex: number) {\r\n        this.setState({ ...this.state, currentTab: newIndex });\r\n    }\r\n    render() {\r\n        if (this.props.invalid) {\r\n            return (\r\n                <Card className={this.classes.recipeCard}>\r\n                    <CardContent className={this.classes.content}>\r\n                        <div className={this.classes.overview}>\r\n                            <Typography variant=\"h4\">Recipe Not Found</Typography>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            );\r\n        }\r\n        return (\r\n            //Desktop\r\n            <Card className={this.classes.recipeCard}>\r\n                <CardContent className={this.classes.content}>\r\n                    <div className={this.classes.overview}>\r\n                        <Typography variant=\"h4\">{this.props.title}</Typography>\r\n                        <div>\r\n                            {this.props.tags.map((tag, i) => {\r\n                                return <TagChip variant=\"link\" label={tag} key={i} link={`/recipes?tags=${tag}`} className={this.classes.tag} />\r\n                            })}\r\n                        </div>\r\n                        <div className={this.classes.recipeInfo}>\r\n                            <img className={this.classes.resultImg} src={this.props.resultImg} alt={this.props.title + \".png\"} />\r\n                            <Typography>{this.props.summary}</Typography>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={this.classes.tabNavContainer}>\r\n                        <Card className={this.classes.tabNavCard}>\r\n                            <div className={this.classes.tabRoot}>\r\n                                <AppBar position=\"static\" className={this.classes.tabCardHeader}>\r\n                                    <Tabs\r\n                                        value={this.state.currentTab}\r\n                                        onChange={this.handleTabChange.bind(this)}\r\n                                        indicatorColor=\"secondary\"\r\n                                        textColor=\"secondary\"\r\n                                        variant=\"fullWidth\"\r\n                                        aria-label=\"Tabs\"\r\n                                    >\r\n                                        <Tab label=\"Ingredients\" {...this.a11yProps(0)} />\r\n                                        <Tab label=\"Steps\" {...this.a11yProps(1)} />\r\n                                    </Tabs>\r\n                                </AppBar>\r\n                                <CardContent className={this.classes.tabContent}>\r\n                                    <SwipeableViews\r\n                                        className={this.classes.swipeableZone}\r\n                                        axis={this.theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={this.state.currentTab}\r\n                                        onChangeIndex={this.handleTabChangeIndex.bind(this)}\r\n                                        enableMouseEvents={true}\r\n                                    >\r\n                                        <TabPanel value={this.state.currentTab} index={0} dir={this.theme.direction}>\r\n                                            <ul>\r\n                                                {this.props.ingredients.map((ingredient, key) => {\r\n                                                    return (<Typography component=\"li\" className={this.classes.list} key={key}>{ingredient}</Typography>);\r\n                                                })}\r\n                                            </ul>\r\n                                        </TabPanel>\r\n                                        <TabPanel value={this.state.currentTab} index={1} dir={this.theme.direction}>\r\n                                            <ol>\r\n                                                {this.props.steps.map((step, key) => {\r\n                                                    return (<Typography component=\"li\" className={this.classes.list} key={key}>{step}</Typography>);\r\n                                                })}\r\n                                            </ol>\r\n                                        </TabPanel>\r\n                                    </SwipeableViews>\r\n                                </CardContent>\r\n                            </div>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(useStyles, { withTheme: true })(RecipeLargeScreen);","import React from 'react';\r\nimport { createStyles, Theme, WithStyles, withStyles, lighten } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography, AppBar, Tabs, Tab } from '@material-ui/core';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport TabPanel from './TabPanel';\r\nimport TagChip from './TagChip';\r\nimport { RecipeInfo } from '../Types/RecipeInfo';\r\n\r\nconst useStyles = (theme: Theme) => createStyles({\r\n    \"recipeCard\": {\r\n        display: \"flex\",\r\n        margin: \"2vw\",\r\n        width: \"inherit\",\r\n        minHeight:0,\r\n        flex: '1 1 auto'\r\n    },\r\n    \"content\": {\r\n        display: \"flex\",\r\n        minHeight:0,\r\n        flex: '1 1 auto',\r\n        flexDirection: \"column\",\r\n        padding: \"inherit\",\r\n        \"&:last-child\": {\r\n            paddingBottom: 0\r\n        }\r\n    },\r\n    \"overview\": {\r\n        margin: theme.spacing(2.5),\r\n        marginBottom: 0\r\n    },\r\n    \"tabNavContainer\": {\r\n        margin: theme.spacing(2.5),\r\n        marginTop: theme.spacing(2),\r\n        minHeight:0,\r\n        flexGrow: 1\r\n    },\r\n    \"tabNavCard\": {\r\n        height: \"100%\",\r\n        display: 'flex',\r\n        minHeight:0,\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.10)\r\n    },\r\n    \"tabRoot\": {\r\n        backgroundColor: lighten(theme.palette.background.paper, 0.10),\r\n        width: \"100%\",\r\n        flex: '1 1 auto',\r\n        minHeight:0,\r\n        flexDirection: 'column',\r\n        display: 'flex'\r\n    },\r\n    \"tabCardHeader\": {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    \"tabContent\": {\r\n        height: \"100%\",\r\n        flex: '1 1 auto',\r\n        overflow: \"auto\"\r\n    },\r\n    \"tag\": {\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \"resultImg\":{\r\n        minWidth:0,\r\n        width:\"100%\",\r\n        height: \"auto\",\r\n        marginBottom:theme.spacing(1.5),\r\n        boxShadow: theme.shadows[1],\r\n        borderRadius: \"4px\",\r\n    },\r\n    \"swipeableZone\":{\r\n        height:\"100%\",\r\n    },\r\n    \"list\":{\r\n        \"&:not(:last-child)\":{\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n});\r\n\r\ninterface RecipeProps extends RecipeInfo<WithStyles<typeof useStyles, true>> {\r\n    invalid?: boolean;\r\n};\r\ninterface RecipeState {\r\n    currentTab: number;\r\n}\r\n\r\nclass RecipeSmallScreen extends React.Component<RecipeProps, RecipeState>{\r\n    private classes: Record<keyof ReturnType<typeof useStyles>, string>;\r\n    private theme: Theme;\r\n    constructor(props: RecipeProps) {\r\n        super(props);\r\n        this.classes = this.props.classes;\r\n        this.theme = this.props.theme;\r\n        this.state = { currentTab: 0 };\r\n    }\r\n    a11yProps(index: number) {\r\n        return {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n    }\r\n    handleTabChange(event: React.ChangeEvent<{}>, newValue: number) {\r\n        this.setState({ ...this.state, currentTab: newValue });\r\n    }\r\n    handleTabChangeIndex(newIndex: number) {\r\n        this.setState({ ...this.state, currentTab: newIndex });\r\n    }\r\n    render() {\r\n        if(this.props.invalid){\r\n            return(\r\n                <Card className={this.classes.recipeCard}>\r\n                <CardContent className={this.classes.content}>\r\n                    <div className={this.classes.overview}>\r\n                        <Typography variant=\"h4\">Recipe Not Found</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            );\r\n        }\r\n        return (\r\n            //Mobile\r\n            <Card className={this.classes.recipeCard}>\r\n                <CardContent className={this.classes.content}>\r\n                    <div className={this.classes.overview}>\r\n                        <Typography variant=\"h4\">{this.props.title}</Typography>\r\n                    </div>\r\n                    <div className={this.classes.tabNavContainer}>\r\n                        <Card className={this.classes.tabNavCard}>\r\n\r\n                            <div className={this.classes.tabRoot}>\r\n                                <AppBar position=\"static\" className={this.classes.tabCardHeader}>\r\n                                    <Tabs\r\n                                        value={this.state.currentTab}\r\n                                        onChange={this.handleTabChange.bind(this)}\r\n                                        indicatorColor=\"secondary\"\r\n                                        textColor=\"secondary\"\r\n                                        variant=\"fullWidth\"\r\n                                        aria-label=\"Tabs\"\r\n                                    >\r\n                                        <Tab label=\"Overview\" {...this.a11yProps(0)} />\r\n                                        <Tab label=\"Ingredients\" {...this.a11yProps(1)} />\r\n                                        <Tab label=\"Steps\" {...this.a11yProps(2)} />\r\n                                    </Tabs>\r\n                                </AppBar>\r\n                                <CardContent className={this.classes.tabContent}>\r\n                                    <SwipeableViews\r\n                                        className={this.classes.swipeableZone}\r\n                                        axis={this.theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={this.state.currentTab}\r\n                                        onChangeIndex={this.handleTabChangeIndex.bind(this)}\r\n                                    >\r\n                                        <TabPanel value={this.state.currentTab} index={0} dir={this.theme.direction}>\r\n                                        <img className={this.classes.resultImg} src={this.props.resultImg} alt={this.props.title+\".png\"}/>\r\n                                            <Typography>{this.props.summary}</Typography>\r\n                                            <div>\r\n                                                {this.props.tags.map((tag,i) => {\r\n                                                    return <TagChip variant=\"link\" label={tag} key={i} link={`/recipes?tags=${tag}`} className={this.classes.tag} />\r\n                                                })}\r\n                                            </div>\r\n                                        </TabPanel>\r\n                                        <TabPanel value={this.state.currentTab} index={1} dir={this.theme.direction}>\r\n                                            <ul>\r\n                                                {this.props.ingredients.map((ingredient, key) => {\r\n                                                    return (<Typography component=\"li\" className={this.classes.list} key={key}>{ingredient}</Typography>);\r\n                                                })}\r\n                                            </ul>\r\n                                        </TabPanel>\r\n                                        <TabPanel value={this.state.currentTab} index={2} dir={this.theme.direction}>\r\n                                            <ol>\r\n                                                {this.props.steps.map((step, key) => {\r\n                                                    return (<Typography component=\"li\" className={this.classes.list} key={key}>{step}</Typography>);\r\n                                                })}\r\n                                            </ol>\r\n                                        </TabPanel>\r\n                                    </SwipeableViews>\r\n                                </CardContent>\r\n                            </div>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(useStyles, { withTheme: true })(RecipeSmallScreen);","import React from 'react';\r\nimport { createStyles, Theme, WithStyles, withStyles } from '@material-ui/core/styles';\r\nimport RecipeLargeScreen from './RecipeLargeScreen';\r\nimport RecipeSmallScreen from './RecipeSmallScreen';\r\nimport { RecipeInfo } from '../Types/RecipeInfo';\r\n\r\nconst useStyles = (theme: Theme) => createStyles({\r\n    \"smallRecipe\": {\r\n        display: \"none\",\r\n        width: \"inherit\",\r\n        flex: \"1 1 auto\",\r\n        minHeight:0,\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n    \"largeRecipe\": {\r\n        display: \"none\",\r\n        width: \"inherit\",\r\n        flex: \"1 1 auto\",\r\n        minHeight:0,\r\n        [theme.breakpoints.up('md')]: {\r\n            display: \"flex\"\r\n        }\r\n    },\r\n    \"recipeRoot\": {\r\n        width: \"inherit\",\r\n        flex: \"1 1 auto\",\r\n        display: \"flex\",\r\n        minHeight:0\r\n    }\r\n});\r\n\r\ninterface RecipeProps extends RecipeInfo<WithStyles<typeof useStyles>> {\r\n    invalid?: boolean;\r\n}\r\n\r\nclass Recipe extends React.Component<RecipeProps>{\r\n    private classes: Record<keyof ReturnType<typeof useStyles>, string>;\r\n    constructor(props: RecipeProps) {\r\n        super(props);\r\n        this.classes = this.props.classes;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={this.classes.recipeRoot}>\r\n                <div className={this.classes.largeRecipe}>\r\n                    <RecipeLargeScreen\r\n                        title={this.props.title}\r\n                        resultImg={this.props.resultImg}\r\n                        summary={this.props.summary}\r\n                        ingredients={this.props.ingredients}\r\n                        steps={this.props.steps}\r\n                        tags={this.props.tags}\r\n                        invalid={this.props.invalid}\r\n                    ></RecipeLargeScreen>\r\n                </div>\r\n                <div className={this.classes.smallRecipe}>\r\n                    <RecipeSmallScreen\r\n                        title={this.props.title}\r\n                        resultImg={this.props.resultImg}\r\n                        summary={this.props.summary}\r\n                        ingredients={this.props.ingredients}\r\n                        steps={this.props.steps}\r\n                        tags={this.props.tags}\r\n                        invalid={this.props.invalid}\r\n                    ></RecipeSmallScreen>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(Recipe);","import React from 'react';\r\nimport Recipe from '../Components/Recipe';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport StreamArray from 'stream-json/streamers/StreamArray';\r\nimport http from 'http';\r\nimport { RecipeInfo } from '../Types/RecipeInfo';\r\n\r\n\r\ntype RecipePageProps = RouteComponentProps & {\r\n    recipe: string;\r\n}\r\ninterface RecipePageState extends RecipeInfo {\r\n    invalidRecipe: boolean;\r\n}\r\n\r\nclass RecipePage extends React.Component<RecipePageProps, RecipePageState>{\r\n    private recipe: string;\r\n    constructor(props: RecipePageProps) {\r\n        super(props);\r\n        this.state = { title: \"\", resultImg: \"\", summary: \"\", ingredients: [], steps: [], tags: [], invalidRecipe: false }\r\n        this.recipe = this.props.location.pathname.substring(8);// everything after /recipe/\r\n    }\r\n    componentDidMount() {\r\n        http.get(`${process.env.REACT_APP_API}/recipe_data.json`, (resp)=>{\r\n            let pipeline = resp.pipe(StreamArray.withParser());\r\n            let found = false;\r\n            pipeline.on('data', data => {\r\n                let result: RecipeInfo & {id:string} = data.value;\r\n                if(result.id === this.recipe){\r\n                    let {id,...recipeInfo} = result;\r\n                    found = true;\r\n                    this.setState({...recipeInfo,invalidRecipe:false});\r\n                    pipeline.end();\r\n                }\r\n            });\r\n            pipeline.on('end',()=>{\r\n                if(!found){\r\n                    this.setState({...this.state,invalidRecipe:true})\r\n                }\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.invalidRecipe) {\r\n            return (\r\n                <Recipe\r\n                    title=\"Recipe Not Found\"\r\n                    resultImg=\"\"\r\n                    summary=\"\"\r\n                    ingredients={[]}\r\n                    steps={[]}\r\n                    tags={[]}\r\n                    invalid={true}\r\n                ></Recipe>\r\n            );\r\n        }\r\n        return (\r\n            <Recipe\r\n                title={this.state.title}\r\n                resultImg={this.state.resultImg}\r\n                summary={this.state.summary}\r\n                ingredients={this.state.ingredients}\r\n                steps={this.state.steps}\r\n                tags={this.state.tags}\r\n            ></Recipe>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(RecipePage)"],"sourceRoot":""}